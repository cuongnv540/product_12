<?php

/**
 * BaseBetyoloCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $description
 * @property Doctrine_Collection $BetyoloSide
 * @property Doctrine_Collection $BetyoloBet
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection getBetyoloSide() Returns the current record's "BetyoloSide" collection
 * @method Doctrine_Collection getBetyoloBet()  Returns the current record's "BetyoloBet" collection
 * @method BetyoloCategory     setName()        Sets the current record's "name" value
 * @method BetyoloCategory     setDescription() Sets the current record's "description" value
 * @method BetyoloCategory     setBetyoloSide() Sets the current record's "BetyoloSide" collection
 * @method BetyoloCategory     setBetyoloBet()  Sets the current record's "BetyoloBet" collection
 * 
 * @package    betyolo
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBetyoloCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('betyolo_category');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('BetyoloSide', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('BetyoloBet', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}